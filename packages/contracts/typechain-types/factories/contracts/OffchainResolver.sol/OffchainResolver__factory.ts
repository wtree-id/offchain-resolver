/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OffchainResolver,
  OffchainResolverInterface,
} from "../../../contracts/OffchainResolver.sol/OffchainResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "urls",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "bytes4",
        name: "callbackFunction",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
    ],
    name: "NewSigners",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "request",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "makeSignatureHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "resolveWithProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f5b38038062001f5b8339818101604052810190620000379190620003ed565b8160009081620000489190620006bd565b5060005b8151811015620000d8576001806000848481518110620000715762000070620007a4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200004c565b507fab0b9cc3a46b568cb08d985497cde8ab7e18892d01f58db7dc7f0d2af859b2d7816040516200010a9190620008a1565b60405180910390a15050620008c5565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001838262000138565b810181811067ffffffffffffffff82111715620001a557620001a462000149565b5b80604052505050565b6000620001ba6200011a565b9050620001c8828262000178565b919050565b600067ffffffffffffffff821115620001eb57620001ea62000149565b5b620001f68262000138565b9050602081019050919050565b60005b838110156200022357808201518184015260208101905062000206565b60008484015250505050565b6000620002466200024084620001cd565b620001ae565b90508281526020810184848401111562000265576200026462000133565b5b6200027284828562000203565b509392505050565b600082601f8301126200029257620002916200012e565b5b8151620002a48482602086016200022f565b91505092915050565b600067ffffffffffffffff821115620002cb57620002ca62000149565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030e82620002e1565b9050919050565b620003208162000301565b81146200032c57600080fd5b50565b600081519050620003408162000315565b92915050565b60006200035d6200035784620002ad565b620001ae565b90508083825260208201905060208402830185811115620003835762000382620002dc565b5b835b81811015620003b057806200039b88826200032f565b84526020840193505060208101905062000385565b5050509392505050565b600082601f830112620003d257620003d16200012e565b5b8151620003e484826020860162000346565b91505092915050565b6000806040838503121562000407576200040662000124565b5b600083015167ffffffffffffffff81111562000428576200042762000129565b5b62000436858286016200027a565b925050602083015167ffffffffffffffff8111156200045a576200045962000129565b5b6200046885828601620003ba565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004c557607f821691505b602082108103620004db57620004da6200047d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000506565b62000551868362000506565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200059e62000598620005928462000569565b62000573565b62000569565b9050919050565b6000819050919050565b620005ba836200057d565b620005d2620005c982620005a5565b84845462000513565b825550505050565b600090565b620005e9620005da565b620005f6818484620005af565b505050565b5b818110156200061e5762000612600082620005df565b600181019050620005fc565b5050565b601f8211156200066d576200063781620004e1565b6200064284620004f6565b8101602085101562000652578190505b6200066a6200066185620004f6565b830182620005fb565b50505b505050565b600082821c905092915050565b6000620006926000198460080262000672565b1980831691505092915050565b6000620006ad83836200067f565b9150826002028217905092915050565b620006c88262000472565b67ffffffffffffffff811115620006e457620006e362000149565b5b620006f08254620004ac565b620006fd82828562000622565b600060209050601f83116001811462000735576000841562000720578287015190505b6200072c85826200069f565b8655506200079c565b601f1984166200074586620004e1565b60005b828110156200076f5784890151825560018201915060208501945060208101905062000748565b868310156200078f57848901516200078b601f8916826200067f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200080a8162000301565b82525050565b60006200081e8383620007ff565b60208301905092915050565b6000602082019050919050565b60006200084482620007d3565b620008508185620007de565b93506200085d83620007ef565b8060005b838110156200089457815162000878888262000810565b975062000885836200082a565b92505060018101905062000861565b5085935050505092915050565b60006020820190508181036000830152620008bd818462000837565b905092915050565b61168680620008d56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780631dcfea09146100975780635600f04f146100c7578063736c0d5b146100e55780639061b92314610115578063f4d4d2f814610145575b600080fd5b610081600480360381019061007c91906109fb565b610175565b60405161008e9190610a43565b60405180910390f35b6100b160048036038101906100ac9190610c42565b6101ef565b6040516100be9190610cfa565b60405180910390f35b6100cf610207565b6040516100dc9190610d94565b60405180910390f35b6100ff60048036038101906100fa9190610db6565b610295565b60405161010c9190610a43565b60405180910390f35b61012f600480360381019061012a9190610e43565b6102b5565b60405161013c9190610f19565b60405180910390f35b61015f600480360381019061015a9190610e43565b6104a1565b60405161016c9190610f19565b60405180910390f35b60007f9061b923000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101e857506101e78261054f565b5b9050919050565b60006101fd858585856105b9565b9050949350505050565b6000805461021490610f6a565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610f6a565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b60016020528060005260406000206000915054906101000a900460ff1681565b60606000639061b92360e01b868686866040516024016102d89493929190610fc8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600167ffffffffffffffff81111561035457610353610b17565b5b60405190808252806020026020018201604052801561038757816020015b60608152602001906001900390816103725790505b5090506000805461039790610f6a565b80601f01602080910402602001604051908101604052809291908181526020018280546103c390610f6a565b80156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b50505050508160008151811061042957610428611003565b5b602002602001018190525030818363f4d4d2f860e01b8530604051602001610452929190611041565b6040516020818303038152906040526040517f556f183000000000000000000000000000000000000000000000000000000000815260040161049895949392919061118c565b60405180910390fd5b60606000806104b285858989610600565b91509150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053990611266565b60405180910390fd5b8092505050949350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008484848051906020012084805190602001206040516020016105e0949392919061137c565b604051602081830303815290604052805190602001209050949350505050565b6000606060008087878101906106169190611413565b915091506000806000888881019061062e919061146f565b925092509250600061064b610645868589886105b9565b836106af565b9050428367ffffffffffffffff16101561069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106919061156c565b60405180910390fd5b80849750975050505050505094509492505050565b6000806000806106bf86866106db565b9250925092506106cf8282610737565b82935050505092915050565b600080600060418451036107205760008060006020870151925060408701519150606087015160001a90506107128882858561089b565b955095509550505050610730565b60006002855160001b9250925092505b9250925092565b6000600381111561074b5761074a61158c565b5b82600381111561075e5761075d61158c565b5b031561089757600160038111156107785761077761158c565b5b82600381111561078b5761078a61158c565b5b036107c2576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156107d6576107d561158c565b5b8260038111156107e9576107e861158c565b5b0361082e578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161082591906115d4565b60405180910390fd5b6003808111156108415761084061158c565b5b8260038111156108545761085361158c565b5b0361089657806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161088d9190610cfa565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156108db576000600385925092509250610985565b600060018888888860405160008152602001604052604051610900949392919061160b565b6020604051602081039080840390855afa158015610922573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097657600060016000801b93509350935050610985565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109d8816109a3565b81146109e357600080fd5b50565b6000813590506109f5816109cf565b92915050565b600060208284031215610a1157610a10610999565b5b6000610a1f848285016109e6565b91505092915050565b60008115159050919050565b610a3d81610a28565b82525050565b6000602082019050610a586000830184610a34565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8982610a5e565b9050919050565b610a9981610a7e565b8114610aa457600080fd5b50565b600081359050610ab681610a90565b92915050565b600067ffffffffffffffff82169050919050565b610ad981610abc565b8114610ae457600080fd5b50565b600081359050610af681610ad0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b4f82610b06565b810181811067ffffffffffffffff82111715610b6e57610b6d610b17565b5b80604052505050565b6000610b8161098f565b9050610b8d8282610b46565b919050565b600067ffffffffffffffff821115610bad57610bac610b17565b5b610bb682610b06565b9050602081019050919050565b82818337600083830152505050565b6000610be5610be084610b92565b610b77565b905082815260208101848484011115610c0157610c00610b01565b5b610c0c848285610bc3565b509392505050565b600082601f830112610c2957610c28610afc565b5b8135610c39848260208601610bd2565b91505092915050565b60008060008060808587031215610c5c57610c5b610999565b5b6000610c6a87828801610aa7565b9450506020610c7b87828801610ae7565b935050604085013567ffffffffffffffff811115610c9c57610c9b61099e565b5b610ca887828801610c14565b925050606085013567ffffffffffffffff811115610cc957610cc861099e565b5b610cd587828801610c14565b91505092959194509250565b6000819050919050565b610cf481610ce1565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d4f578082015181840152602081019050610d34565b60008484015250505050565b6000610d6682610d15565b610d708185610d20565b9350610d80818560208601610d31565b610d8981610b06565b840191505092915050565b60006020820190508181036000830152610dae8184610d5b565b905092915050565b600060208284031215610dcc57610dcb610999565b5b6000610dda84828501610aa7565b91505092915050565b600080fd5b600080fd5b60008083601f840112610e0357610e02610afc565b5b8235905067ffffffffffffffff811115610e2057610e1f610de3565b5b602083019150836001820283011115610e3c57610e3b610de8565b5b9250929050565b60008060008060408587031215610e5d57610e5c610999565b5b600085013567ffffffffffffffff811115610e7b57610e7a61099e565b5b610e8787828801610ded565b9450945050602085013567ffffffffffffffff811115610eaa57610ea961099e565b5b610eb687828801610ded565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000610eeb82610ec4565b610ef58185610ecf565b9350610f05818560208601610d31565b610f0e81610b06565b840191505092915050565b60006020820190508181036000830152610f338184610ee0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8257607f821691505b602082108103610f9557610f94610f3b565b5b50919050565b6000610fa78385610ecf565b9350610fb4838584610bc3565b610fbd83610b06565b840190509392505050565b60006040820190508181036000830152610fe3818688610f9b565b90508181036020830152610ff8818486610f9b565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61103b81610a7e565b82525050565b6000604082019050818103600083015261105b8185610ee0565b905061106a6020830184611032565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006110b982610d15565b6110c3818561109d565b93506110d3818560208601610d31565b6110dc81610b06565b840191505092915050565b60006110f383836110ae565b905092915050565b6000602082019050919050565b600061111382611071565b61111d818561107c565b93508360208202850161112f8561108d565b8060005b8581101561116b578484038952815161114c85826110e7565b9450611157836110fb565b925060208a01995050600181019050611133565b50829750879550505050505092915050565b611186816109a3565b82525050565b600060a0820190506111a16000830188611032565b81810360208301526111b38187611108565b905081810360408301526111c78186610ee0565b90506111d6606083018561117d565b81810360808301526111e88184610ee0565b90509695505050505050565b7f5369676e617475726556657269666965723a20496e76616c696420736967617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b6000611250602383610d20565b915061125b826111f4565b604082019050919050565b6000602082019050818103600083015261127f81611243565b9050919050565b600081905092915050565b7f1900000000000000000000000000000000000000000000000000000000000000600082015250565b60006112c7600283611286565b91506112d282611291565b600282019050919050565b60008160601b9050919050565b60006112f5826112dd565b9050919050565b6000611307826112ea565b9050919050565b61131f61131a82610a7e565b6112fc565b82525050565b60008160c01b9050919050565b600061133d82611325565b9050919050565b61135561135082610abc565b611332565b82525050565b6000819050919050565b61137661137182610ce1565b61135b565b82525050565b6000611387826112ba565b9150611393828761130e565b6014820191506113a38286611344565b6008820191506113b38285611365565b6020820191506113c38284611365565b60208201915081905095945050505050565b60006113e082610a5e565b9050919050565b6113f0816113d5565b81146113fb57600080fd5b50565b60008135905061140d816113e7565b92915050565b6000806040838503121561142a57611429610999565b5b600083013567ffffffffffffffff8111156114485761144761099e565b5b61145485828601610c14565b9250506020611465858286016113fe565b9150509250929050565b60008060006060848603121561148857611487610999565b5b600084013567ffffffffffffffff8111156114a6576114a561099e565b5b6114b286828701610c14565b93505060206114c386828701610ae7565b925050604084013567ffffffffffffffff8111156114e4576114e361099e565b5b6114f086828701610c14565b9150509250925092565b7f5369676e617475726556657269666965723a205369676e61747572652065787060008201527f6972656400000000000000000000000000000000000000000000000000000000602082015250565b6000611556602483610d20565b9150611561826114fa565b604082019050919050565b6000602082019050818103600083015261158581611549565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b6115ce816115bb565b82525050565b60006020820190506115e960008301846115c5565b92915050565b600060ff82169050919050565b611605816115ef565b82525050565b60006080820190506116206000830187610ceb565b61162d60208301866115fc565b61163a6040830185610ceb565b6116476060830184610ceb565b9594505050505056fea264697066735822122083b3454dbec1a15683ca14acb44d4f7a7dc0be8f719a83c04cbd9a3db629350464736f6c63430008170033";

type OffchainResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffchainResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffchainResolver__factory extends ContractFactory {
  constructor(...args: OffchainResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _url: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_url, _signers, overrides || {});
  }
  override deploy(
    _url: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_url, _signers, overrides || {}) as Promise<
      OffchainResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OffchainResolver__factory {
    return super.connect(runner) as OffchainResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffchainResolverInterface {
    return new Interface(_abi) as OffchainResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OffchainResolver {
    return new Contract(address, _abi, runner) as unknown as OffchainResolver;
  }
}
