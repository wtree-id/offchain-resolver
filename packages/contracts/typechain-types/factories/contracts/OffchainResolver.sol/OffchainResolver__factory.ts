/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OffchainResolver,
  OffchainResolverInterface,
} from "../../../contracts/OffchainResolver.sol/OffchainResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "urls",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "bytes4",
        name: "callbackFunction",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
    ],
    name: "NewSigners",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "request",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "makeSignatureHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "resolveWithProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9c38038062001e9c8339818101604052810190620000379190620003ed565b8160009081620000489190620006bd565b5060005b8151811015620000d8576001806000848481518110620000715762000070620007a4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200004c565b507fab0b9cc3a46b568cb08d985497cde8ab7e18892d01f58db7dc7f0d2af859b2d7816040516200010a9190620008a1565b60405180910390a15050620008c5565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001838262000138565b810181811067ffffffffffffffff82111715620001a557620001a462000149565b5b80604052505050565b6000620001ba6200011a565b9050620001c8828262000178565b919050565b600067ffffffffffffffff821115620001eb57620001ea62000149565b5b620001f68262000138565b9050602081019050919050565b60005b838110156200022357808201518184015260208101905062000206565b60008484015250505050565b6000620002466200024084620001cd565b620001ae565b90508281526020810184848401111562000265576200026462000133565b5b6200027284828562000203565b509392505050565b600082601f8301126200029257620002916200012e565b5b8151620002a48482602086016200022f565b91505092915050565b600067ffffffffffffffff821115620002cb57620002ca62000149565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030e82620002e1565b9050919050565b620003208162000301565b81146200032c57600080fd5b50565b600081519050620003408162000315565b92915050565b60006200035d6200035784620002ad565b620001ae565b90508083825260208201905060208402830185811115620003835762000382620002dc565b5b835b81811015620003b057806200039b88826200032f565b84526020840193505060208101905062000385565b5050509392505050565b600082601f830112620003d257620003d16200012e565b5b8151620003e484826020860162000346565b91505092915050565b6000806040838503121562000407576200040662000124565b5b600083015167ffffffffffffffff81111562000428576200042762000129565b5b62000436858286016200027a565b925050602083015167ffffffffffffffff8111156200045a576200045962000129565b5b6200046885828601620003ba565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004c557607f821691505b602082108103620004db57620004da6200047d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000506565b62000551868362000506565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200059e62000598620005928462000569565b62000573565b62000569565b9050919050565b6000819050919050565b620005ba836200057d565b620005d2620005c982620005a5565b84845462000513565b825550505050565b600090565b620005e9620005da565b620005f6818484620005af565b505050565b5b818110156200061e5762000612600082620005df565b600181019050620005fc565b5050565b601f8211156200066d576200063781620004e1565b6200064284620004f6565b8101602085101562000652578190505b6200066a6200066185620004f6565b830182620005fb565b50505b505050565b600082821c905092915050565b6000620006926000198460080262000672565b1980831691505092915050565b6000620006ad83836200067f565b9150826002028217905092915050565b620006c88262000472565b67ffffffffffffffff811115620006e457620006e362000149565b5b620006f08254620004ac565b620006fd82828562000622565b600060209050601f83116001811462000735576000841562000720578287015190505b6200072c85826200069f565b8655506200079c565b601f1984166200074586620004e1565b60005b828110156200076f5784890151825560018201915060208501945060208101905062000748565b868310156200078f57848901516200078b601f8916826200067f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200080a8162000301565b82525050565b60006200081e8383620007ff565b60208301905092915050565b6000602082019050919050565b60006200084482620007d3565b620008508185620007de565b93506200085d83620007ef565b8060005b838110156200089457815162000878888262000810565b975062000885836200082a565b92505060018101905062000861565b5085935050505092915050565b60006020820190508181036000830152620008bd818462000837565b905092915050565b6115c780620008d56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780631dcfea09146100975780635600f04f146100c7578063736c0d5b146100e55780639061b92314610115578063f4d4d2f814610145575b600080fd5b610081600480360381019061007c9190610a06565b610175565b60405161008e9190610a4e565b60405180910390f35b6100b160048036038101906100ac9190610c4d565b6101ef565b6040516100be9190610d05565b60405180910390f35b6100cf610207565b6040516100dc9190610d9f565b60405180910390f35b6100ff60048036038101906100fa9190610dc1565b610295565b60405161010c9190610a4e565b60405180910390f35b61012f600480360381019061012a9190610e4e565b6102b5565b60405161013c9190610f24565b60405180910390f35b61015f600480360381019061015a9190610e4e565b610480565b60405161016c9190610f24565b60405180910390f35b60007f9061b923000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101e857506101e78261052e565b5b9050919050565b60006101fd85858585610598565b9050949350505050565b6000805461021490610f75565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610f75565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b60016020528060005260406000206000915054906101000a900460ff1681565b60606000639061b92360e01b868686866040516024016102d89493929190610fd3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600167ffffffffffffffff81111561035457610353610b22565b5b60405190808252806020026020018201604052801561038757816020015b60608152602001906001900390816103725790505b5090506000805461039790610f75565b80601f01602080910402602001604051908101604052809291908181526020018280546103c390610f75565b80156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050505050816000815181106104295761042861100e565b5b602002602001018190525030818363f4d4d2f860e01b856040517f556f1830000000000000000000000000000000000000000000000000000000008152600401610477959493929190611167565b60405180910390fd5b6060600080610491858589896105df565b91509150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611241565b60405180910390fd5b8092505050949350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008484848051906020012084805190602001206040516020016105bf9493929190611357565b604051602081830303815290604052805190602001209050949350505050565b60006060600080600086868101906105f791906113b0565b925092509250600061065861065230858d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505088610598565b836106ba565b9050428367ffffffffffffffff1610156106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e906114ad565b60405180910390fd5b8084955095505050505094509492505050565b6000806000806106ca86866106e6565b9250925092506106da8282610742565b82935050505092915050565b6000806000604184510361072b5760008060006020870151925060408701519150606087015160001a905061071d888285856108a6565b95509550955050505061073b565b60006002855160001b9250925092505b9250925092565b60006003811115610756576107556114cd565b5b826003811115610769576107686114cd565b5b03156108a25760016003811115610783576107826114cd565b5b826003811115610796576107956114cd565b5b036107cd576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156107e1576107e06114cd565b5b8260038111156107f4576107f36114cd565b5b03610839578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016108309190611515565b60405180910390fd5b60038081111561084c5761084b6114cd565b5b82600381111561085f5761085e6114cd565b5b036108a157806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016108989190610d05565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156108e6576000600385925092509250610990565b60006001888888886040516000815260200160405260405161090b949392919061154c565b6020604051602081039080840390855afa15801561092d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361098157600060016000801b93509350935050610990565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109e3816109ae565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b6109a4565b5b6000610a2a848285016109f1565b91505092915050565b60008115159050919050565b610a4881610a33565b82525050565b6000602082019050610a636000830184610a3f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9482610a69565b9050919050565b610aa481610a89565b8114610aaf57600080fd5b50565b600081359050610ac181610a9b565b92915050565b600067ffffffffffffffff82169050919050565b610ae481610ac7565b8114610aef57600080fd5b50565b600081359050610b0181610adb565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b5a82610b11565b810181811067ffffffffffffffff82111715610b7957610b78610b22565b5b80604052505050565b6000610b8c61099a565b9050610b988282610b51565b919050565b600067ffffffffffffffff821115610bb857610bb7610b22565b5b610bc182610b11565b9050602081019050919050565b82818337600083830152505050565b6000610bf0610beb84610b9d565b610b82565b905082815260208101848484011115610c0c57610c0b610b0c565b5b610c17848285610bce565b509392505050565b600082601f830112610c3457610c33610b07565b5b8135610c44848260208601610bdd565b91505092915050565b60008060008060808587031215610c6757610c666109a4565b5b6000610c7587828801610ab2565b9450506020610c8687828801610af2565b935050604085013567ffffffffffffffff811115610ca757610ca66109a9565b5b610cb387828801610c1f565b925050606085013567ffffffffffffffff811115610cd457610cd36109a9565b5b610ce087828801610c1f565b91505092959194509250565b6000819050919050565b610cff81610cec565b82525050565b6000602082019050610d1a6000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d5a578082015181840152602081019050610d3f565b60008484015250505050565b6000610d7182610d20565b610d7b8185610d2b565b9350610d8b818560208601610d3c565b610d9481610b11565b840191505092915050565b60006020820190508181036000830152610db98184610d66565b905092915050565b600060208284031215610dd757610dd66109a4565b5b6000610de584828501610ab2565b91505092915050565b600080fd5b600080fd5b60008083601f840112610e0e57610e0d610b07565b5b8235905067ffffffffffffffff811115610e2b57610e2a610dee565b5b602083019150836001820283011115610e4757610e46610df3565b5b9250929050565b60008060008060408587031215610e6857610e676109a4565b5b600085013567ffffffffffffffff811115610e8657610e856109a9565b5b610e9287828801610df8565b9450945050602085013567ffffffffffffffff811115610eb557610eb46109a9565b5b610ec187828801610df8565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000610ef682610ecf565b610f008185610eda565b9350610f10818560208601610d3c565b610f1981610b11565b840191505092915050565b60006020820190508181036000830152610f3e8184610eeb565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8d57607f821691505b602082108103610fa057610f9f610f46565b5b50919050565b6000610fb28385610eda565b9350610fbf838584610bce565b610fc883610b11565b840190509392505050565b60006040820190508181036000830152610fee818688610fa6565b90508181036020830152611003818486610fa6565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61104681610a89565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061109482610d20565b61109e8185611078565b93506110ae818560208601610d3c565b6110b781610b11565b840191505092915050565b60006110ce8383611089565b905092915050565b6000602082019050919050565b60006110ee8261104c565b6110f88185611057565b93508360208202850161110a85611068565b8060005b85811015611146578484038952815161112785826110c2565b9450611132836110d6565b925060208a0199505060018101905061110e565b50829750879550505050505092915050565b611161816109ae565b82525050565b600060a08201905061117c600083018861103d565b818103602083015261118e81876110e3565b905081810360408301526111a28186610eeb565b90506111b16060830185611158565b81810360808301526111c38184610eeb565b90509695505050505050565b7f5369676e617475726556657269666965723a20496e76616c696420736967617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b600061122b602383610d2b565b9150611236826111cf565b604082019050919050565b6000602082019050818103600083015261125a8161121e565b9050919050565b600081905092915050565b7f1900000000000000000000000000000000000000000000000000000000000000600082015250565b60006112a2600283611261565b91506112ad8261126c565b600282019050919050565b60008160601b9050919050565b60006112d0826112b8565b9050919050565b60006112e2826112c5565b9050919050565b6112fa6112f582610a89565b6112d7565b82525050565b60008160c01b9050919050565b600061131882611300565b9050919050565b61133061132b82610ac7565b61130d565b82525050565b6000819050919050565b61135161134c82610cec565b611336565b82525050565b600061136282611295565b915061136e82876112e9565b60148201915061137e828661131f565b60088201915061138e8285611340565b60208201915061139e8284611340565b60208201915081905095945050505050565b6000806000606084860312156113c9576113c86109a4565b5b600084013567ffffffffffffffff8111156113e7576113e66109a9565b5b6113f386828701610c1f565b935050602061140486828701610af2565b925050604084013567ffffffffffffffff811115611425576114246109a9565b5b61143186828701610c1f565b9150509250925092565b7f5369676e617475726556657269666965723a205369676e61747572652065787060008201527f6972656400000000000000000000000000000000000000000000000000000000602082015250565b6000611497602483610d2b565b91506114a28261143b565b604082019050919050565b600060208201905081810360008301526114c68161148a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b61150f816114fc565b82525050565b600060208201905061152a6000830184611506565b92915050565b600060ff82169050919050565b61154681611530565b82525050565b60006080820190506115616000830187610cf6565b61156e602083018661153d565b61157b6040830185610cf6565b6115886060830184610cf6565b9594505050505056fea2646970667358221220fec9d7cef3bebf31d095720806a9415678c303fd16c1b1c94a3764a13a20298a64736f6c63430008170033";

type OffchainResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffchainResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffchainResolver__factory extends ContractFactory {
  constructor(...args: OffchainResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _url: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_url, _signers, overrides || {});
  }
  override deploy(
    _url: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_url, _signers, overrides || {}) as Promise<
      OffchainResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OffchainResolver__factory {
    return super.connect(runner) as OffchainResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffchainResolverInterface {
    return new Interface(_abi) as OffchainResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OffchainResolver {
    return new Contract(address, _abi, runner) as unknown as OffchainResolver;
  }
}
