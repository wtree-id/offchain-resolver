/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OffchainResolver,
  OffchainResolverInterface,
} from "../../../contracts/OffchainResolver.sol/OffchainResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "urls",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "bytes4",
        name: "callbackFunction",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
    ],
    name: "NewSigners",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "request",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "makeSignatureHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "resolveWithProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020ac380380620020ac8339818101604052810190620000379190620003ed565b8160009081620000489190620006bd565b5060005b8151811015620000d8576001806000848481518110620000715762000070620007a4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200004c565b507fab0b9cc3a46b568cb08d985497cde8ab7e18892d01f58db7dc7f0d2af859b2d7816040516200010a9190620008a1565b60405180910390a15050620008c5565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001838262000138565b810181811067ffffffffffffffff82111715620001a557620001a462000149565b5b80604052505050565b6000620001ba6200011a565b9050620001c8828262000178565b919050565b600067ffffffffffffffff821115620001eb57620001ea62000149565b5b620001f68262000138565b9050602081019050919050565b60005b838110156200022357808201518184015260208101905062000206565b60008484015250505050565b6000620002466200024084620001cd565b620001ae565b90508281526020810184848401111562000265576200026462000133565b5b6200027284828562000203565b509392505050565b600082601f8301126200029257620002916200012e565b5b8151620002a48482602086016200022f565b91505092915050565b600067ffffffffffffffff821115620002cb57620002ca62000149565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030e82620002e1565b9050919050565b620003208162000301565b81146200032c57600080fd5b50565b600081519050620003408162000315565b92915050565b60006200035d6200035784620002ad565b620001ae565b90508083825260208201905060208402830185811115620003835762000382620002dc565b5b835b81811015620003b057806200039b88826200032f565b84526020840193505060208101905062000385565b5050509392505050565b600082601f830112620003d257620003d16200012e565b5b8151620003e484826020860162000346565b91505092915050565b6000806040838503121562000407576200040662000124565b5b600083015167ffffffffffffffff81111562000428576200042762000129565b5b62000436858286016200027a565b925050602083015167ffffffffffffffff8111156200045a576200045962000129565b5b6200046885828601620003ba565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004c557607f821691505b602082108103620004db57620004da6200047d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000506565b62000551868362000506565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200059e62000598620005928462000569565b62000573565b62000569565b9050919050565b6000819050919050565b620005ba836200057d565b620005d2620005c982620005a5565b84845462000513565b825550505050565b600090565b620005e9620005da565b620005f6818484620005af565b505050565b5b818110156200061e5762000612600082620005df565b600181019050620005fc565b5050565b601f8211156200066d576200063781620004e1565b6200064284620004f6565b8101602085101562000652578190505b6200066a6200066185620004f6565b830182620005fb565b50505b505050565b600082821c905092915050565b6000620006926000198460080262000672565b1980831691505092915050565b6000620006ad83836200067f565b9150826002028217905092915050565b620006c88262000472565b67ffffffffffffffff811115620006e457620006e362000149565b5b620006f08254620004ac565b620006fd82828562000622565b600060209050601f83116001811462000735576000841562000720578287015190505b6200072c85826200069f565b8655506200079c565b601f1984166200074586620004e1565b60005b828110156200076f5784890151825560018201915060208501945060208101905062000748565b868310156200078f57848901516200078b601f8916826200067f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200080a8162000301565b82525050565b60006200081e8383620007ff565b60208301905092915050565b6000602082019050919050565b60006200084482620007d3565b620008508185620007de565b93506200085d83620007ef565b8060005b838110156200089457815162000878888262000810565b975062000885836200082a565b92505060018101905062000861565b5085935050505092915050565b60006020820190508181036000830152620008bd818462000837565b905092915050565b6117d780620008d56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780631dcfea09146100975780635600f04f146100c7578063736c0d5b146100e55780639061b92314610115578063f4d4d2f814610145575b600080fd5b610081600480360381019061007c9190610be7565b610175565b60405161008e9190610c2f565b60405180910390f35b6100b160048036038101906100ac9190610e2e565b6101ef565b6040516100be9190610ee6565b60405180910390f35b6100cf610207565b6040516100dc9190610f80565b60405180910390f35b6100ff60048036038101906100fa9190610fa2565b610295565b60405161010c9190610c2f565b60405180910390f35b61012f600480360381019061012a919061102f565b6102b5565b60405161013c9190611105565b60405180910390f35b61015f600480360381019061015a919061102f565b610578565b60405161016c9190611105565b60405180910390f35b60007f9061b923000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101e857506101e782610626565b5b9050919050565b60006101fd85858585610690565b9050949350505050565b6000805461021490611156565b80601f016020809104026020016040519081016040528092919081815260200182805461024090611156565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b60016020528060005260406000206000915054906101000a900460ff1681565b60606102f56040518060400160405280600f81526020017f656e7465726564207265736f6c766500000000000000000000000000000000008152506106d7565b6000639061b92360e01b8686868660405160240161031694939291906111b4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506103b36040518060400160405280600d81526020017f6d6164652063616c6c44617461000000000000000000000000000000000000008152506106d7565b6000600167ffffffffffffffff8111156103d0576103cf610d03565b5b60405190808252806020026020018201604052801561040357816020015b60608152602001906001900390816103ee5790505b5090506104446040518060400160405280601681526020017f696e697469616c697a65642075726c73206172726179000000000000000000008152506106d7565b6000805461045190611156565b80601f016020809104026020016040519081016040528092919081815260200182805461047d90611156565b80156104ca5780601f1061049f576101008083540402835291602001916104ca565b820191906000526020600020905b8154815290600101906020018083116104ad57829003601f168201915b5050505050816000815181106104e3576104e26111ef565b5b602002602001018190525061052c6040518060400160405280600781526020017f7365742075726c000000000000000000000000000000000000000000000000008152506106d7565b30818363f4d4d2f860e01b856040517f556f183000000000000000000000000000000000000000000000000000000000815260040161056f959493929190611348565b60405180910390fd5b606060008061058985858989610770565b91509150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090611422565b60405180910390fd5b8092505050949350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008484848051906020012084805190602001206040516020016106b79493929190611538565b604051602081830303815290604052805190602001209050949350505050565b61076d816040516024016106eb9190610f80565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061084b565b50565b60006060600080600086868101906107889190611591565b92509250925060006107e96107e330858d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505088610690565b83610865565b9050428367ffffffffffffffff161015610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f9061168e565b60405180910390fd5b8084955095505050505094509492505050565b6108628161085a6108916108b2565b63ffffffff16565b50565b60008060008061087586866108bd565b9250925092506108858282610919565b82935050505092915050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610b71819050919050565b600080600060418451036109025760008060006020870151925060408701519150606087015160001a90506108f488828585610a7d565b955095509550505050610912565b60006002855160001b9250925092505b9250925092565b6000600381111561092d5761092c6116ae565b5b8260038111156109405761093f6116ae565b5b0315610a79576001600381111561095a576109596116ae565b5b82600381111561096d5761096c6116ae565b5b036109a4576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156109b8576109b76116ae565b5b8260038111156109cb576109ca6116ae565b5b03610a10578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610a0791906116f6565b60405180910390fd5b600380811115610a2357610a226116ae565b5b826003811115610a3657610a356116ae565b5b03610a7857806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401610a6f9190610ee6565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610abd576000600385925092509250610b67565b600060018888888860405160008152602001604052604051610ae2949392919061172d565b6020604051602081039080840390855afa158015610b04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5857600060016000801b93509350935050610b67565b8060008060001b935093509350505b9450945094915050565b610b79611772565b565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610bc481610b8f565b8114610bcf57600080fd5b50565b600081359050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610b85565b5b6000610c0b84828501610bd2565b91505092915050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7582610c4a565b9050919050565b610c8581610c6a565b8114610c9057600080fd5b50565b600081359050610ca281610c7c565b92915050565b600067ffffffffffffffff82169050919050565b610cc581610ca8565b8114610cd057600080fd5b50565b600081359050610ce281610cbc565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d3b82610cf2565b810181811067ffffffffffffffff82111715610d5a57610d59610d03565b5b80604052505050565b6000610d6d610b7b565b9050610d798282610d32565b919050565b600067ffffffffffffffff821115610d9957610d98610d03565b5b610da282610cf2565b9050602081019050919050565b82818337600083830152505050565b6000610dd1610dcc84610d7e565b610d63565b905082815260208101848484011115610ded57610dec610ced565b5b610df8848285610daf565b509392505050565b600082601f830112610e1557610e14610ce8565b5b8135610e25848260208601610dbe565b91505092915050565b60008060008060808587031215610e4857610e47610b85565b5b6000610e5687828801610c93565b9450506020610e6787828801610cd3565b935050604085013567ffffffffffffffff811115610e8857610e87610b8a565b5b610e9487828801610e00565b925050606085013567ffffffffffffffff811115610eb557610eb4610b8a565b5b610ec187828801610e00565b91505092959194509250565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f3b578082015181840152602081019050610f20565b60008484015250505050565b6000610f5282610f01565b610f5c8185610f0c565b9350610f6c818560208601610f1d565b610f7581610cf2565b840191505092915050565b60006020820190508181036000830152610f9a8184610f47565b905092915050565b600060208284031215610fb857610fb7610b85565b5b6000610fc684828501610c93565b91505092915050565b600080fd5b600080fd5b60008083601f840112610fef57610fee610ce8565b5b8235905067ffffffffffffffff81111561100c5761100b610fcf565b5b60208301915083600182028301111561102857611027610fd4565b5b9250929050565b6000806000806040858703121561104957611048610b85565b5b600085013567ffffffffffffffff81111561106757611066610b8a565b5b61107387828801610fd9565b9450945050602085013567ffffffffffffffff81111561109657611095610b8a565b5b6110a287828801610fd9565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60006110d7826110b0565b6110e181856110bb565b93506110f1818560208601610f1d565b6110fa81610cf2565b840191505092915050565b6000602082019050818103600083015261111f81846110cc565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061116e57607f821691505b60208210810361118157611180611127565b5b50919050565b600061119383856110bb565b93506111a0838584610daf565b6111a983610cf2565b840190509392505050565b600060408201905081810360008301526111cf818688611187565b905081810360208301526111e4818486611187565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61122781610c6a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061127582610f01565b61127f8185611259565b935061128f818560208601610f1d565b61129881610cf2565b840191505092915050565b60006112af838361126a565b905092915050565b6000602082019050919050565b60006112cf8261122d565b6112d98185611238565b9350836020820285016112eb85611249565b8060005b85811015611327578484038952815161130885826112a3565b9450611313836112b7565b925060208a019950506001810190506112ef565b50829750879550505050505092915050565b61134281610b8f565b82525050565b600060a08201905061135d600083018861121e565b818103602083015261136f81876112c4565b9050818103604083015261138381866110cc565b90506113926060830185611339565b81810360808301526113a481846110cc565b90509695505050505050565b7f5369676e617475726556657269666965723a20496e76616c696420736967617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b600061140c602383610f0c565b9150611417826113b0565b604082019050919050565b6000602082019050818103600083015261143b816113ff565b9050919050565b600081905092915050565b7f1900000000000000000000000000000000000000000000000000000000000000600082015250565b6000611483600283611442565b915061148e8261144d565b600282019050919050565b60008160601b9050919050565b60006114b182611499565b9050919050565b60006114c3826114a6565b9050919050565b6114db6114d682610c6a565b6114b8565b82525050565b60008160c01b9050919050565b60006114f9826114e1565b9050919050565b61151161150c82610ca8565b6114ee565b82525050565b6000819050919050565b61153261152d82610ecd565b611517565b82525050565b600061154382611476565b915061154f82876114ca565b60148201915061155f8286611500565b60088201915061156f8285611521565b60208201915061157f8284611521565b60208201915081905095945050505050565b6000806000606084860312156115aa576115a9610b85565b5b600084013567ffffffffffffffff8111156115c8576115c7610b8a565b5b6115d486828701610e00565b93505060206115e586828701610cd3565b925050604084013567ffffffffffffffff81111561160657611605610b8a565b5b61161286828701610e00565b9150509250925092565b7f5369676e617475726556657269666965723a205369676e61747572652065787060008201527f6972656400000000000000000000000000000000000000000000000000000000602082015250565b6000611678602483610f0c565b91506116838261161c565b604082019050919050565b600060208201905081810360008301526116a78161166b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b6116f0816116dd565b82525050565b600060208201905061170b60008301846116e7565b92915050565b600060ff82169050919050565b61172781611711565b82525050565b60006080820190506117426000830187610ed7565b61174f602083018661171e565b61175c6040830185610ed7565b6117696060830184610ed7565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220ff1e3c76af148aaf1401dcaf41193e63959c19b69695b929b7c769717b6dae2e64736f6c63430008170033";

type OffchainResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffchainResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffchainResolver__factory extends ContractFactory {
  constructor(...args: OffchainResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _url: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_url, _signers, overrides || {});
  }
  override deploy(
    _url: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_url, _signers, overrides || {}) as Promise<
      OffchainResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OffchainResolver__factory {
    return super.connect(runner) as OffchainResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffchainResolverInterface {
    return new Interface(_abi) as OffchainResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OffchainResolver {
    return new Contract(address, _abi, runner) as unknown as OffchainResolver;
  }
}
